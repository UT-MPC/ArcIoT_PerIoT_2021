<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="edu.mpc.utexas.arcontroller.arApplication">
    <uses-feature android:glEsVersion="0x00020000" />
    <!--
        Add this permission to get access to the camera.
    -->
    <uses-permission android:name="android.permission.CAMERA" />

    <!--
        Add this permission to allow opening network sockets.
    -->
    <uses-permission android:name="android.permission.INTERNET"/>

    <!--
        Add this permission to check which network access properties (e.g.
        active type: 3G/WiFi).
     -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />

    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>

    <uses-permission android:name="android.permission.READ_LOGS" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />


    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme"
        android:networkSecurityConfig="@xml/network_security_config"
        >

    <!-- The following must be present to facilitate use of ARCore, if available -->
    <meta-data android:name="com.google.ar.core" android:value="optional" />

    <!--
     NOTE: The values in 'android:configChanges' ensure that Android will
     not destroy and re-create the activity when the user flips the
     keyboard, changes the orientation of the device, or the actual or
     physical screen resolution changes, but calls the Activity's
     onConfigurationChanged() function instead.

     NOTE 2: In order to prevent automatic reactions to orientation
     changes in addition to setting proper values for
     'android:configChanges', you also must explicitly specify the screen
     orientation used by the application, either by setting the attribute
     'android:screenOrientation' or in code by calling
     Activity.setRequestedOrientation().
    -->
    <activity
        android:name=".Core.ObjectRecognition.ObjectTargets"
        android:configChanges="orientation|keyboardHidden|screenSize|smallestScreenSize"
        android:theme="@style/ARTheme"
        android:launchMode="singleTask"
        >
        <intent-filter>
            <action android:name="android.intent.action.MAIN" />

            <category android:name="android.intent.category.LAUNCHER" />
        </intent-filter>
    </activity>

    </application>
</manifest>
